[versions]
activity = "1.5.1"
androidDesugarLibs = "1.1.5"
appcompat = "1.5.0"
coreKtx = "1.8.0"
detekt = "1.21.0"
hilt = "2.42"
javaxInject = "1"
jetpackCompose = "1.2.1"
junit = "4.13.2"
kotlinxCoroutines = "1.6.4"
kotlinxSerialization = "1.3.3"
ksp = "1.7.10-1.0.6"
lifecycle = "2.5.1"
mockWebServer = "4.10.0"
navigationCompose = "1.0.0"
okhttpProfiler = "1.0.8"
retrofit = "2.9.0"
room = "2.4.2"
truth = "1.1.3"

[libraries]
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

# De-sugar Java 8 APIs
android-desugar-libs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarLibs" }

# Compose integration with activities
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity" }
compose-ui-core = { group = "androidx.compose.ui", name = "ui", version.ref = "jetpackCompose" }

# Tooling support (Previews, etc.)
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "jetpackCompose" }

# Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
compose-foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "jetpackCompose" }

# Material Design
compose-material-core = { group = "androidx.compose.material", name = "material", version.ref = "jetpackCompose" }

# Material design icons
compose-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core", version.ref = "jetpackCompose" }
compose-material-icons-extened = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "jetpackCompose" }

# Integration with ViewModels
lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Integration with observables
compose-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata", version.ref = "jetpackCompose" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "jetpackCompose" }

compose-ui-test-junit = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "jetpackCompose" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "jetpackCompose" }

core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# Dependency Injection
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "hilt" }
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "navigationCompose" }
javax-inject = { group = "javax.inject", name = "javax.inject", version.ref = "javaxInject" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }

# Testing Kotlin Coroutines
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }

# Serialization
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# Mocking HTTP Responses
mockWebServer = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockWebServer" }

okhttp-profiler = { group = "com.localebro", name = "okhttpprofiler", version.ref = "okhttpProfiler" }

# REST Client
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }

# Persistence
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }

# Improved Test Assertions
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }

[plugins]
# A static code analyzer for Kotlin
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }


[bundles]
compose = ["activity-compose", "compose-ui-core", "compose-ui-tooling", "compose-foundation", "compose-material-core", "compose-material-icons-core", "compose-material-icons-extened", "compose-runtime-livedata", "compose-ui-tooling-preview"]
lifecycle = ["lifecycle-viewmodel-compose", "lifecycle-viewmodel-ktx", "lifecycle-runtime-ktx"]
retrofit = ["retrofit-core", "retrofit-gson"]