name: Android

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/mobile-*.yml'
      - 'frontend/mobile/**'

  pull_request:
    paths:
      - '.github/workflows/mobile-*.yml'
      - 'frontend/mobile/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: frontend/mobile

jobs:
  gradle-verify:
    runs-on: macOS-15
    name: "Verify Gradle"
    steps:
      - uses: actions/checkout@v4

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v3
        with:
          min-wrapper-count: 1
          allow-snapshots: false
          allow-checksums: false

  analysis:
    runs-on: macOS-15
    name: "Static Analysis"
    needs: gradle-verify
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run detekt
        run: ./gradlew --warning-mode all android:detektDebug

      - name: Upload detekt report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'frontend/mobile/build/reports/detekt/debug.sarif'

      - name: Check lint
        run: ./gradlew android:lintDebug

      - name: Upload lint report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'frontend/mobile/build/reports/lint-results-debug.sarif'

  build:
    runs-on: macOS-15
    name: "Build"
    needs: gradle-verify
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Android APKs
        run: ./gradlew androidApp:assembleRelease

  localTest:
    runs-on: macOS-15
    name: "Local Tests"
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run Android local tests
        run: ./gradlew shared:testReleaseUnitTestKotlinAndroid androidApp:testReleaseUnitTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'local-test-results'
          path: '*/build/reports/tests'

  instrumentedTest:
    name: "Instrumented Tests"
    needs: build
    runs-on: macOS-15 # enables hardware acceleration in the virtual machine
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          disable-animations: true
          disk-size: 2000M
          heap-size: 600M
          script: ./gradlew shared:connectedReleaseAndroidTest androidApp:connectedReleaseAndroidTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumented-test-reports
          path: 'frontend/mobile/build/reports/androidTests'
