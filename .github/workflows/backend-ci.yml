name: Backend (CI)

on:
  push:
    branches: [ "mobile" ]
    paths:
      - '.github/workflows/backend-*.yml'
      - 'backend/**'
  pull_request:
    paths:
      - '.github/workflows/backend-*.yml'
      - 'backend/**'

defaults:
  run:
    working-directory: backend

jobs:
  gradle-verify:
    runs-on: ubuntu-22.04
    name: "Verify Gradle"
    steps:
      - uses: actions/checkout@v3

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.6
        with:
          min-wrapper-count: 1
          allow-snapshots: false
          allow-checksums: false

  analysis:
    runs-on: ubuntu-22.04
    name: "Static Analysis"
    needs: gradle-verify
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run detekt
        run: ./gradlew detekt

      - name: Upload detekt report
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: backend/build/reports/detekt/detekt.sarif

      - name: Generate SBOM
        run: ./gradlew cyclonedxBom

      - name: Upload SBOM
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'sbom'
          path: 'backend/build/reports/bom.json'

  build:
    runs-on: ubuntu-22.04
    name: "Build"
    needs: gradle-verify
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Create Transit Land Repository Configuration
        run: cat > src/main/kotlin/com/mobilispect/backend/data/transit_land/TransitLandCredentialsConfiguration.kt < EOF
        package com.mobilispect.backend.data.transit_land

        import org.springframework.context.annotation.Bean
        import org.springframework.context.annotation.Configuration

        @Configuration
        class TransitLandCredentialsConfiguration {
        @Bean
        fun repository(): TransitLandCredentialsRepository = DummyTransitLandCredentialsRepository()
    }
        EOF

    - name: Create Transit Land Repository
      run: cat > src/main/kotlin/com/mobilispect/backend/data/transit_land/DummyTransitLandCredentialsRepository.kt < EOF
      package com.mobilispect.backend.data.transit_land

      class DummyTransitLandCredentialsRepository : TransitLandCredentialsRepository {
        override fun get(): String = "CvaXEwfuCJ7x1mC169r53ygiVU8N55mj"
      }
      EOF

      - name: Build
        run: ./gradlew assemble

      - name: Run tests
        run: ./gradlew test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'test-results'
          path: 'backend/build/reports/tests'

      - name: Run mutation tests
        uses: alandovskis/gradle-pitest-comment-action@e372e00fccf3117a423e8add38160b919f0b87e0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          reports-retention: 1
          reports-path: "backend/build/reports/pitest"
          reports-name: "mutation-results"
          working-directory: backend
